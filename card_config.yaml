
### I've stripped out most of my entities and code to show the basics of RGBW and RGB
### I've hacked it all together... so it works but I'd love to hear more efficient ways to code

### The tutorial I took my base from (and probably a better resource than I:
### https://github.com/lukevink/hass-config-lajv

### To begin:
### My two floors, main and basement, are side by side on a horizontal stack.
### The trick is a conditional card to select between them with an input select

type: horizontal-stack
cards:
  - type: horizontal-stack
    cards:
      - type: conditional
        conditions:
          - entity: input_select.floor_select
            state: main
        card:
          type: vertical-stack
          cards:
          
### config-template-card allows for javascript and css styling:

            - type: custom:config-template-card
              entities:
                - light.bathroom_dimmer
                - light.picture_window
                - light.side_window_led
                - light.sink_light
                - input_select.floor_select
                - sensor.time
                - sensor.fan_temperature
                - sensor.yard_filename
                - binary_sensor.mail
                - sensor.pianobar_nowplaying
                - sun.sun
              card:
                type: picture-elements
### Background image. scene with near full darkness
### Bo lights on, but slight environment light added (04:00 morning):
                image: /local/ui/floorplan/main/16534_june_4.png
                style: |
                  ha-card:first-child {
                    background: rgba(0, 0, 0, 0)
                  }
                elements:
                  - action: none
                    entity: sensor.time
                    hold_action:
                      action: none
### This is poorly coded: My attempt to change plan image every couple hour to show sun shadow:
                    image: >-
                      ${states['sun.sun'].state == 'below_horizon' ?
                      '/local/ui/floorplan/transparent.png' :
                      states['sensor.time'].state >= '20:00' ?
                      '/local/ui/floorplan/main/16534_june_20.png' :
                      states['sensor.time'].state >= '18:00' ?
                      '/local/ui/floorplan/main/16534_june_18.png' :
                      states['sensor.time'].state >= '16:00' ?
                      '/local/ui/floorplan/main/16534_june_16.png' :
                      states['sensor.time'].state >= '14:00' ?
                      '/local/ui/floorplan/main/16534_june_14.png' :
                      states['sensor.time'].state >= '12:00' ?
                      '/local/ui/floorplan/main/16534_june_12.png' :
                      states['sensor.time'].state >= '10:00' ?
                      '/local/ui/floorplan/main/16534_june_10.png' :
                      states['sensor.time'].state >= '08:00' ?
                      '/local/ui/floorplan/main/16534_june_8.png' :
                      states['sensor.time'].state >= '07:00' ?
                      '/local/ui/floorplan/main/16534_june_7.png' :
                      '/local/ui/floorplan/transparent.png'}
                    style:
                      height: 100%
                      left: 50%
                      mix-blend-mode: lighten
### This is part of luke vink's setup. you'll have to see his template sensor config for more info:
                      opacity: ${states['sensor.cloud_opacity'].state}
                      top: 50%
                      width: 100%
                    tap_action:
                      action: none
                    type: image

### a white only dimmer:                    
                  - action: none
                    entity: light.bathroom_dimmer
                    hold_action:
                      action: none
                    image: /local/ui/floorplan/main/bathroom.png
                    style:
                      left: 50%
                      mix-blend-mode: lighten
### I couldn't really tell if the lights were on below about 25% brightness, so this code will
### show any brightness value below '.25' as if it were on at 25%, then brighten from there.
### Note: '64' is about 25% of 255
                      opacity: >-
                        ${states['light.bathroom_dimmer'].state === 'on' ?
                        (states['light.bathroom_dimmer'].attributes.brightness <
                        '64 '? '.25' :
                        states['light.bathroom_dimmer'].attributes.brightness/
                        255) : '0'}
                      top: 50%
                      width: 100%
                    tap_action:
                      action: none
                    type: image

### An RGBW LED composing of 3 different images. This first one I made a yellowish warm light
### to replicate the LEDs white channel:                  
                  - action: none
                    entity: light.picture_window
                    hold_action:
                      action: none
                    image: /local/ui/floorplan/main/picture_led_warm.png
                    style:
                      left: 50%
                      mix-blend-mode: lighten
                      opacity: >-
                        ${states['light.picture_window'].state === 'on' ?
                        (states["light.picture_window"].attributes.rgbw_color[3]
                        < '89' &&
                        states["light.picture_window"].attributes.rgbw_color[3]
                        > '0' ? '.35':
                        states["light.picture_window"].attributes.rgbw_color[3]
                        / 255) : 0}
                      top: 50%
                      width: 100%
                    tap_action:
                      action: none
                    type: image
### This second image of the light on was done with on a RED light, which gets a
### hue shift to accurately represent your LED RGB color
                  - action: none
                    entity: light.picture_window
                    hold_action:
                      action: none
                    image: /local/ui/floorplan/main/picture_led_red.png
                    style:
                      filter: >-
                        ${ "hue-rotate(" +
                        (states["light.picture_window"].attributes.hs_color ?
                        states["light.picture_window"].attributes.hs_color[0] :
                        "0") + "deg) saturate(" +
                        (states["light.picture_window"].attributes.hs_color ?
                        states["light.picture_window"].attributes.hs_color[1] :
                        100)+ "%)" }
                      left: 50%
                      mix-blend-mode: lighten
                      opacity: >-
                        ${states['light.picture_window'].state === 'on' ?
                        (states['light.picture_window'].attributes.brightness <
                        '102 '? '.4' :
                        states["light.picture_window"].attributes.brightness /
                        255) : '0' }
                      top: 50%
                      width: 100%
                    tap_action:
                      action: none
                    type: image
### This last image was rendered with a COOL white light to represent RGB at 255/255/255:                    
                  - action: none
                    entity: light.picture_window
                    hold_action:
                      action: none
                    image: /local/ui/floorplan/main/picture_led_cool.png
                    style:
                      left: 50%
                      mix-blend-mode: lighten
                      opacity: >-
                        ${ (
                        states["light.picture_window"].attributes.brightness ?
                        states["light.picture_window"].attributes.brightness /
                        '255' : '0') -
                        (states["light.picture_window"].attributes.hs_color ?
                        states["light.picture_window"].attributes.hs_color[1]/'99'
                        : '0')}
                      top: 50%
                      width: 100%
                    tap_action:
                      action: none
                    type: image
### This is another RGBW LED, so same setup:                    
                  - action: none
                    entity: light.side_window_led
                    hold_action:
                      action: none
                    image: /local/ui/floorplan/main/side_led_warm.png
                    style:
                      left: 50%
                      mix-blend-mode: lighten
                      opacity: >-
                        ${states['light.side_window_led'].state === 'on' ?
                        (states["light.side_window_led"].attributes.rgbw_color[3]
                        < '89' &&
                        states["light.side_window_led"].attributes.rgbw_color[3]
                        > '0' ? '.35':
                        states["light.side_window_led"].attributes.rgbw_color[3]
                        / 255) : '0'}
                      top: 50%
                      width: 100%
                    tap_action:
                      action: none
                    type: image
                    
                  - action: none
                    entity: light.side_window_led
                    hold_action:
                      action: none
                    image: /local/ui/floorplan/main/side_led_red.png
                    style:
                      filter: >-
                        ${ "hue-rotate(" +
                        (states["light.side_window_led"].attributes.hs_color ?
                        states["light.side_window_led"].attributes.hs_color[0] :
                        "0") + "deg) saturate(" +
                        (states["light.side_window_led"].attributes.hs_color ?
                        states["light.side_window_led"].attributes.hs_color[1] :
                        100)+ "%)" }
                      left: 50%
                      mix-blend-mode: lighten
                      opacity: >-
                        ${states['light.side_window_led'].state === 'on' ?
                        (states['light.side_window_led'].attributes.brightness <
                        '102 '? '.4' :
                        states["light.side_window_led"].attributes.brightness /
                        255) : '0' }
                      top: 50%
                      width: 100%
                    tap_action:
                      action: none
                    type: image
                    
                  - action: none
                    entity: light.side_window_led
                    hold_action:
                      action: none
                    image: /local/ui/floorplan/main/side_led_cool.png
                    style:
                      left: 50%
                      mix-blend-mode: lighten
                      opacity: >-
                        ${ (
                        states["light.side_window_led"].attributes.brightness ?
                        states["light.side_window_led"].attributes.brightness /
                        255 : 0) -
                        (states["light.side_window_led"].attributes.hs_color ?
                        states["light.side_window_led"].attributes.hs_color[1]/99
                        : 0)}
                      top: 50%
                      width: 100%
                    tap_action:
                      action: none
                    type: image

### A simple on/off light. I've found I could keep the opacity/brightness bit. It's always 100% aka 255:
                  - action: none
                    entity: light.sink_light
                    hold_action:
                      action: none
                    image: /local/ui/floorplan/main/kitchen_sink.png
                    style:
                      left: 50%
                      mix-blend-mode: lighten
                      opacity: >-
                        ${states['light.sink_light'].state === 'on' ?
                        (states['light.sink_light'].attributes.brightness / 255)
                        : '0'}
                      top: 50%
                      width: 100%
                    tap_action:
                      action: none
                    type: image

### A fan switch. Just a reminder that you can play with GIF files too ;)
                  - action: none
                    entity: switch.fan
                    hold_action:
                      action: none
                    image: /local/ui/floorplan/main/fan.gif
                    style:
                      mix-blend-mode: overlay
                      top: 50%
                      left: 50%
                      width: 100%
                      opacity: '${states[''switch.fan''].state === ''on'' ? ''1'' : ''0''}'
                    tap_action:
                      action: none
                    type: image
### GIF for a binary sensor:                    
                  - action: none
                    entity: binary_sensor.mail
                    hold_action:
                      action: none
                    image: /local/ui/floorplan/main/mail.gif
                    style:
                      mix-blend-mode: lighten
                      top: 50%
                      left: 50%
                      width: 100%
                      opacity: >-
                        ${states['binary_sensor.mail'].state === 'on' ? '1' :
                        '0'}
                    tap_action:
                      action: none
                    type: image
### My newest addition! extremely complicated, but I'm capturing a snapshot of my grass and
### doing automated CLI edits to tile and mask the image to overlay it on my floorplan
### outside my house. I WANT TO SEE SNOW IN THE WINTER, lol. Working decent so far...
### But all the heavy lifting is in node red and extremely hacked together

                  - action: none
                    entity: sensor.yard_local_path
                    hold_action:
                      action: none
                    image: ${states['sensor.yard_local_path'].state}
                    style:
                      filter: ''
                      left: 50%
                      opacity: >-
                        ${states['sun.sun'].state == 'below_horizon' ? '0.1' :
                        states['sensor.time'].state >= '20:00' ? '0.9' :
                        states['sensor.time'].state >= '18:00' ? '0.9' :
                        states['sensor.time'].state >= '16:00' ? '1' :
                        states['sensor.time'].state >= '14:00' ? '1' :
                        states['sensor.time'].state >= '12:00' ? '1' :
                        states['sensor.time'].state >= '10:00' ? '0.9' :
                        states['sensor.time'].state >= '08:00' ? '0.9' :
                        states['sensor.time'].state >= '07:00' ? '0.7' : '0.1'}
                      top: 50%
                      width: 100%
                    tap_action:
                      action: none
                    type: image
### This :is the floor select that "leads" to the basement when I click on my main flor stairs
### Because there are only two floors, and so two inputs, i just used the same 'select_next' service
                  - type: image
                    entity: input_select.floor_select
                    tap_action:
                      action: call-service
                      service: input_select.select_next
                      service_data:
                        entity_id: input_select.floor_select
                    state_image:
                      main: /local/ui/floorplan/transparent.png
                      basement: /local/ui/floorplan/transparent.png
                      unavailable: /local/ui/floorplan/unavailable.png
                    style:
                      top: 45%
                      left: 31%
                      width: 14%
                      height: 4%
                      border: null
### Starting with input select just previous to this, everything that follows are transparent 
### squares that act as the buttons to control all the image files we've configured above...
                  - type: image
                    entity: light.sink_light
                    tap_action:
                      action: toggle
                    state_image:
                      'on': /local/ui/floorplan/transparent.png
                      'off': /local/ui/floorplan/transparent.png
                      unavailable: /local/ui/floorplan/unavailable.png
                    style:
                      top: 33%
                      left: 17%
                      width: 6%
                      height: 6%
                      border: null
                      
                      
                  - type: image
                    entity: light.bathroom_dimmer
                    tap_action:
                      action: toggle
                    state_image:
                      'on': /local/ui/floorplan/transparent.png
                      'off': /local/ui/floorplan/transparent.png
                      unavailable: /local/ui/floorplan/unavailable.png
                    style:
                      top: 47%
                      left: 78%
                      width: 10%
                      height: 10%
                      border: null
### Note the RGBW LEDs only have one button, but those 3 different images for color channels
                  - type: image
                    entity: light.side_window_led
                    tap_action:
                      action: toggle
                    state_image:
                      'on': /local/ui/floorplan/transparent.png
                      'off': /local/ui/floorplan/transparent.png
                      unavailable: /local/ui/floorplan/unavailable.png
                    style:
                      top: 61%
                      left: 10%
                      width: 7%
                      height: 7%
                      border: null
                  - type: image
                    entity: light.picture_window
                    tap_action:
                      action: toggle
                    state_image:
                      'on': /local/ui/floorplan/transparent.png
                      'off': /local/ui/floorplan/transparent.png
                      unavailable: /local/ui/floorplan/unavailable.png
                    style:
                      top: 82%
                      left: 42%
                      width: 9%
                      height: 9%
                      border: null
### Just a sensor state of a temp probe outside:
                  - type: state-label
                    entity: sensor.fan_temperature
                    prefix: 'Outside: '
                    style:
                      top: 93%
                      left: 50%
                      color: '#000'
                      border-radius: 0%
                      text-align: center
                      background-color: rgba(255, 255, 255, 0.5)
                      font-size: 80%
                      font-weight: bold
                      text-shadow: 0.25px 0.5px 0.5px white

### Here starts the basement part of the orginal horizontal stack:

      - type: conditional
        conditions:
          - entity: input_select.floor_select
            state: basement
        card:
          type: vertical-stack
          cards:
            - type: custom:config-template-card
              entities:
                - light.hue_color_lamp_1
                - light.hue_color_lamp_2
                - sensor.fan_temperature
                - sensor.time
                - sun.sun
              card:
                type: picture-elements
                image: /local/ui/floorplan/basement/16534b_june_4.png
                style: |
                  ha-card:first-child {
                    background: rgba(0, 0, 0, 0)
                  }
                elements:
                  - action: none
                    entity: sensor.time
                    hold_action:
                      action: none
### FWIW I can't really say this mess is worth the sun shadows...
                    image: >-
                      ${states['sun.sun'].state == 'below_horizon' ?
                      '/local/ui/floorplan/transparent.png' :
                      states['sensor.time'].state >= '20:00' ?
                      '/local/ui/floorplan/basement/16534b_june_20.png' :
                      states['sensor.time'].state >= '18:00' ?
                      '/local/ui/floorplan/basement/16534b_june_18.png' :
                      states['sensor.time'].state >= '16:00' ?
                      '/local/ui/floorplan/basement/16534b_june_16.png' :
                      states['sensor.time'].state >= '14:00' ?
                      '/local/ui/floorplan/basement/16534b_june_14.png' :
                      states['sensor.time'].state >= '12:00' ?
                      '/local/ui/floorplan/basement/16534b_june_12.png' :
                      states['sensor.time'].state >= '10:00' ?
                      '/local/ui/floorplan/basement/16534b_june_10.png' :
                      states['sensor.time'].state >= '08:00' ?
                      '/local/ui/floorplan/basement/16534b_june_8.png' :
                      states['sensor.time'].state >= '07:00' ?
                      '/local/ui/floorplan/basement/16534b_june_7.png' :
                      '/local/ui/floorplan/transparent.png'}
                    style:
                      height: 100%
                      left: 50%
                      mix-blend-mode: lighten
                      opacity: ${states['sensor.cloud_opacity'].state}
                      top: 50%
                      width: 100%
                    tap_action:
                      action: none
                    type: image
### Note these HUE LED lights are only RGBW, so each one only has images rendered in
### RED and COOL white:
                  - action: none
                    entity: light.hue_color_lamp_1
                    hold_action:
                      action: none
                    image: /local/ui/floorplan/basement/stairs_red.png
                    style:
                      filter: >-
                        ${ "hue-rotate(" +
                        (states["light.hue_color_lamp_1"].attributes.hs_color ?
                        states["light.hue_color_lamp_1"].attributes.hs_color[0]
                        : "0") + "deg) saturate(" +
                        (states["light.hue_color_lamp_1"].attributes.hs_color ?
                        states["light.hue_color_lamp_1"].attributes.hs_color[1]
                        : 100)+ "%)" }
                      left: 50%
                      mix-blend-mode: lighten
                      opacity: >-
                        ${states['light.hue_color_lamp_1'].state === 'on' ?
                        (states['light.hue_color_lamp_1'].attributes.brightness
                        < '102 '? '.4' :
                        states["light.hue_color_lamp_1"].attributes.brightness /
                        255) : '0' }
                      top: 50%
                      width: 100%
                    tap_action:
                      action: none
                    type: image

                  - action: none
                    entity: light.hue_color_lamp_1
                    hold_action:
                      action: none
                    image: /local/ui/floorplan/basement/stairs_cool.png
                    style:
                      left: 50%
                      mix-blend-mode: lighten
                      opacity: >-
                        ${ (
                        states["light.hue_color_lamp_1"].attributes.brightness ?
                        states["light.hue_color_lamp_1"].attributes.brightness /
                        255 : 0) -
                        (states["light.hue_color_lamp_1"].attributes.hs_color ?
                        states["light.hue_color_lamp_1"].attributes.hs_color[1]/99
                        : 0)}
                      top: 50%
                      width: 100%
                    tap_action:
                      action: none
                    type: image
### Another HUE RGB:
                  - action: none
                    entity: light.hue_color_lamp_2
                    hold_action:
                      action: none
                    image: /local/ui/floorplan/basement/ipad_room_red.png
                    style:
                      filter: >-
                        ${ "hue-rotate(" +
                        (states["light.hue_color_lamp_2"].attributes.hs_color ?
                        states["light.hue_color_lamp_2"].attributes.hs_color[0]
                        : "0") + "deg) saturate(" +
                        (states["light.hue_color_lamp_2"].attributes.hs_color ?
                        states["light.hue_color_lamp_2"].attributes.hs_color[1]
                        : 100)+ "%)" }
                      left: 50%
                      mix-blend-mode: lighten
                      opacity: >-
                        ${states['light.hue_color_lamp_2'].state === 'on' ?
                        (states['light.hue_color_lamp_2'].attributes.brightness
                        < '102 '? '.4' :
                        states["light.hue_color_lamp_2"].attributes.brightness /
                        255) : '0' }
                      top: 50%
                      width: 100%
                    tap_action:
                      action: none
                    type: image
                  - action: none
                    entity: light.hue_color_lamp_2
                    hold_action:
                      action: none
                    image: /local/ui/floorplan/basement/ipad_room_cool.png
                    style:
                      left: 50%
                      mix-blend-mode: lighten
                      opacity: >-
                        ${ (
                        states["light.hue_color_lamp_2"].attributes.brightness ?
                        states["light.hue_color_lamp_2"].attributes.brightness /
                        255 : 0) -
                        (states["light.hue_color_lamp_2"].attributes.hs_color ?
                        states["light.hue_color_lamp_2"].attributes.hs_color[1]/99
                        : 0)}
                      top: 50%
                      width: 100%
                    tap_action:
                      action: none
                    type: image

### I have more cards stack underneath this, but they're nothing particular to the floorplan setup
### Cheers!

                  - type: image
                    entity: light.hue_color_lamp_1
                    tap_action:
                      action: toggle
                    state_image:
                      'on': /local/ui/floorplan/transparent.png
                      'off': /local/ui/floorplan/transparent.png
                      unavailable: /local/ui/floorplan/unavailable.png
                    style:
                      top: 43%
                      left: 43.5%
                      width: 7%
                      height: 7%
                      border: null
                  - type: image
                    entity: light.hue_color_lamp_2
                    tap_action:
                      action: toggle
                    state_image:
                      'on': /local/ui/floorplan/transparent.png
                      'off': /local/ui/floorplan/transparent.png
                      unavailable: /local/ui/floorplan/unavailable.png
                    style:
                      top: 39%
                      left: 58%
                      width: 12%
                      height: 12%
                      border: null

                    entity: input_select.floor_select
                    tap_action:
                      action: call-service
                      service: input_select.select_next
                      service_data:
                        entity_id: input_select.floor_select
                    state_image:
                      main: /local/ui/floorplan/transparent.png
                      basement: /local/ui/floorplan/transparent.png
                      unavailable: /local/ui/floorplan/unavailable.png
                    style:
                      top: 42.5%
                      left: 30%
                      width: 15%
                      height: 5%
                      border: null

                  - type: state-label
                    entity: sensor.fan_temperature
                    prefix: 'Outside: '
                    style:
                      top: 93%
                      left: 50%
                      color: '#000'
                      border-radius: 0%
                      text-align: center
                      background-color: rgba(255, 255, 255, 0.5)
                      font-size: 80%
                      font-weight: bold
                      text-shadow: 0.25px 0.5px 0.5px white
            - show_name: false
              show_icon: false
              show_state: true
              type: glance
              entities:
                - entity: sensor.ht_basement_temperature
                - entity: sensor.ht_basement_humidity
              columns: 2
              title: 'Basement:'
